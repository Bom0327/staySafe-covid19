{"version":3,"sources":["images/map.png","components/Cards/Card/CardDetails.module.css","components/Cards/Cards.module.css","components/Header.js","api/australia.js","components/Cards/Card/CardDetails.js","components/Cards/AusCard.js","components/Charts/AusChart.js","components/Screens/AusScreen.js","api/japan.js","components/Cards/JpCard.js","components/Charts/JpChart.js","components/Tables/Loading.js","components/Tables/JpTotalTable.js","components/Tables/JpDailyTable.js","components/Tables/Tab.js","components/Screens/JpScreen.js","api/korea.js","components/Cards/KrCard.js","components/Charts/KrChart.js","components/Screens/KrScreen.js","api/malaysia.js","components/Cards/MysCard.js","components/Charts/MysChart.js","components/Screens/MysScreen.js","components/Screens/Tab.js","components/Home.js","components/Footer.js","components/App.js","index.js","images/covid19.png"],"names":["module","exports","Header","convertNullToZero","num","fetchData","a","axios","get","params","country","headers","response","data","modifiedData","reduce","acc","item","itemIndex","arr","today","Date","day","yesterday","date","toISOString","split","obj","confirmed","cases","total","newConfirmed","new","recovered","active","critical","deaths","newDeaths","tested","tests","date_2","getMonth","getDate","push","console","log","CardDetails","className","cardTitle","totalValue","value","Grid","xs","sm","md","lg","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","AusCard","useState","apiData","setApiData","useEffect","res","toLocaleString","toString","replace","fetchApi","cardContainer","src","covid","alt","container","spacing","justify","AusMixChart","labels","map","datasets","label","borderColor","backgroundColor","fill","type","yAxisID","pointRadius","hoverRadius","style","paddingBottom","Paper","padding","options","title","display","text","fontSize","legend","position","responsive","tooltips","mode","callbacks","tooltipItem","datasetIndex","yLabel","elements","line","scales","xAxes","time","unit","yAxes","id","show","scaleLabel","labelString","ticks","beginAtZero","callback","gridLines","AusCharts","newConfirmedData","setNewConfirmedData","activeData","setActiveData","newDeathsData","setNewDeathsData","comparedData","setComparedData","barThickness","stack","parseInt","stacked","footer","tooltipItems","e","dataset","_meta","Object","keys","currentValue","index","percentage","parseFloat","toFixed","AusScreen","theDayBeforeYesterday","fetchProvinceData","iso","prefecture","region","province","confirmed_diff","newActive","active_diff","deaths_diff","JpCard","JpMixChart","JpCharts","useStyles","makeStyles","theme","root","alignItems","justifyContent","Loading","classes","CircularProgress","JpTotalTable","p","c","d","flexDirection","table","height","width","fontFamily","fontWeight","length","rows","columns","field","headerName","pageSize","sortModel","sort","JpDailyTable","nc","nd","na","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","a11yProps","header","JpTable","setValue","AppBar","elevation","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","JpScreen","date1","date2","obj1","obj2","KrCard","KrMixChart","KrCharts","KrScreen","MysCard","MysMixChart","MysCharts","MysScreen","CovidData","marginTop","Home","Footer","year","getFullYear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fdb53ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.123cde95.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardDetails_card__k5Ps3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Cards_cardContainer__x7aVY\",\"cardTitle\":\"Cards_cardTitle__29IaC\",\"tested\":\"Cards_tested__mcPrp\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"active\":\"Cards_active__1mwzX\"};","import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Stay Safe</h1>\n    </header>\n  )\n}\n\nexport default Header;","import axios from \"axios\";\n\nconst url = 'https://covid-193.p.rapidapi.com/history';\n\nconst convertNullToZero = (num) => {\n  return num === null ? 0 : num;\n}\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(url, {\n      params: { country: 'australia' },\n      headers: {\n        'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n      }\n    });\n\n    const data = response.data.response;\n    const modifiedData = data.reduce((acc, item, itemIndex, arr) => {\n      const today = new Date(item.day)\n      const yesterday = new Date(today-1000 * 60 * 60 * 24)\n      const date = yesterday.toISOString().split('T')[0]\n  \n      const obj = {\n        confirmed: item.cases.total,\n        newConfirmed: convertNullToZero(item.cases.new),\n        recovered: item.cases.recovered,\n        active: item.cases.active,\n        critical: convertNullToZero(item.cases.critical),\n        deaths: item.deaths.total,\n        newDeaths: convertNullToZero(item.deaths.new),\n        tested: convertNullToZero(item.tests.total),\n        date: date,\n        date_2: yesterday.getMonth() + 1 + '.' + yesterday.getDate()\n      }\n\n      if (itemIndex === 0) {\n        acc.push(obj);\n      }\n      else if ((arr[itemIndex -1].day !== item.day)) {\n        acc.push(obj);\n      }\n      return acc;\n    }, []);\n    \n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n}","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport cx from 'classnames';\nimport styles from './CardDetails.module.css';\n\nconst CardDetails = ({ className, cardTitle, totalValue, value }) => (\n  <Grid item  xs={4} sm={3} md={2} lg={2} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        {totalValue}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h2\" color=\"textSecondary\">\n        {value}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardDetails;\n","import React, { useState, useEffect } from 'react';\nimport { fetchData } from '../../api/australia';\nimport { Grid } from '@material-ui/core';\nimport CardDetails from './Card/CardDetails';\nimport styles from './Cards.module.css';\nimport covid from '../../images/covid19.png';\n\nconst AusCard = () => {\n  const [apiData, setApiData] = useState({});\n  const {confirmed, newConfirmed, recovered, deaths, newDeaths, active, tested} = apiData;\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        confirmed :res[0].confirmed.toLocaleString(),\n        newConfirmed :res[0].newConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        recovered :res[0].recovered.toLocaleString(),\n        deaths :res[0].deaths.toLocaleString(),\n        newDeaths :res[0].newDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        active :res[0].active.toLocaleString(),\n        tested :res[0].tested.toLocaleString()\n      });    \n    };\n\n    fetchApi();\n  }, []);\n\n\n\n  return (\n    <div className={styles.cardContainer}>\n     <img className='covid-img' src={covid} alt='covid' />\n      <Grid container spacing={1} justify=\"center\">\n        <CardDetails\n          className={styles.confirmed}\n          cardTitle=\"Confirmed\"\n          totalValue={confirmed}\n          value={newConfirmed}\n        />\n        <CardDetails\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          totalValue={recovered}\n        />\n        <CardDetails\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          totalValue={deaths}\n          value={newDeaths}\n        />\n        <CardDetails\n          className={styles.active}\n          cardTitle=\"Active\"\n          totalValue={active}\n        />\n        <CardDetails\n          className={styles.tested}\n          cardTitle=\"Tested\"\n          totalValue={tested}\n        />\n      </Grid>\n    </div>\n  )\n\n};\n\nexport default AusCard;\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { fetchData } from '../../api/australia';\n\nexport const AusMixChart = () => {\n  const [apiData, setApiData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        labels: res.map(data => data.date),\n        datasets: [\n          {\n            label: 'New Confirmed',\n            borderColor: 'salmon',\n            backgroundColor: 'salmon',\n            fill: true,\n            data: res.map(data => data.newConfirmed),\n            type: 'bar',\n            yAxisID: 'y-axis-1'\n          },\n          {\n            label: 'Confirmed',\n            borderColor: '#ff6384',\n            backgroundColor: '#ff6384',\n            fill: false,\n            data: res.map(data => data.confirmed),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Recovered',\n            borderColor: '#36a2eb',\n            backgroundColor: '#36a2eb',\n            fill: false,\n            data: res.map(data => data.recovered),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Deaths',\n            borderColor: '#c9cbcf',\n            backgroundColor: '#c9cbcf',\n            fill: false,\n            data: res.map(data => data.deaths),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n\n        ]\n      });\n    };\n\n    fetchApi();\n  }, []);\n\n  const options = {\n    title: { display: true, text: 'Change in confirmed cases from Covid 19', fontSize: 16 },\n    legend: { display: true, position: 'bottom' },\n    responsive: true,\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n      }\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        }\n      ],\n\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-2',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Accumulation'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Paper style={{ padding: '10px' }}>\n        <Bar\n          data={apiData}\n          options={options}\n        />\n      </Paper>\n    </div>\n  )\n};\n\n\nexport const AusCharts = () => {\n  const [newConfirmedData, setNewConfirmedData] = useState({});\n  const [activeData, setActiveData] = useState({});\n  const [newDeathsData, setNewDeathsData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      const labels = [\n        res[9].date_2,\n        res[8].date_2,\n        res[7].date_2,\n        res[6].date_2,\n        res[5].date_2,\n        res[4].date_2,\n        res[3].date_2,\n        res[2].date_2,\n        res[1].date_2,\n        res[0].date_2\n      ]\n\n      setNewConfirmedData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Confirmed',\n            backgroundColor: '#ff6384',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newConfirmed,\n              res[8].newConfirmed,\n              res[7].newConfirmed,\n              res[6].newConfirmed,\n              res[5].newConfirmed,\n              res[4].newConfirmed,\n              res[3].newConfirmed,\n              res[2].newConfirmed,\n              res[1].newConfirmed,\n              res[0].newConfirmed\n            ]\n          }\n        ]\n      });\n\n      setActiveData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Non-Critical',\n            stack: 'active',\n            backgroundColor: '#ffcd56',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].active - res[9].critical,\n              res[8].active - res[8].critical,\n              res[7].active - res[7].critical,\n              res[6].active - res[6].critical,\n              res[5].active - res[5].critical,\n              res[4].active - res[4].critical,\n              res[3].active - res[3].critical,\n              res[2].active - res[2].critical,\n              res[1].active - res[1].critical,\n              res[0].active - res[0].critical\n            ]\n          },\n          {\n            label: 'Critical',\n            stack: 'active',\n            backgroundColor: 'salmon',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].critical,\n              res[8].critical,\n              res[7].critical,\n              res[6].critical,\n              res[5].critical,\n              res[4].critical,\n              res[3].critical,\n              res[2].critical,\n              res[1].critical,\n              res[0].critical\n            ]\n          }\n        ]\n      });\n\n      setNewDeathsData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Deaths',\n            backgroundColor: '#c9cbcf',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newDeaths,\n              res[8].newDeaths,\n              res[7].newDeaths,\n              res[6].newDeaths,\n              res[5].newDeaths,\n              res[4].newDeaths,\n              res[3].newDeaths,\n              res[2].newDeaths,\n              res[1].newDeaths,\n              res[0].newDeaths\n            ]\n          }\n        ]\n      });\n\n      setComparedData({\n        labels: ['Recovered', 'Active', 'Deaths'],\n        datasets: [\n          {\n            backgroundColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            borderColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            fill: false,\n            data: [\n              res[0].recovered,\n              res[0].active,\n              res[0].deaths\n            ]\n          }\n        ]\n      });\n    }\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Grid container spacing={3}>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newConfirmedData}\n              options={{\n                title: { display: true, text: 'Daily new cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={activeData}\n              options={{\n                title: { display: true, text: 'Total Active Cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    stacked: true,\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }],\n                  xAxes: [{\n                    stacked: true,\n                  }]\n                },\n                tooltips: {\n                  mode: 'label',\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    },\n                    footer: (tooltipItems, data) => {\n                      let total = tooltipItems.reduce((a, e) => a + parseInt(e.yLabel), 0);\n                      return 'Total Active: ' + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newDeathsData}\n              options={{\n                title: { display: true, text: 'Daily new deaths', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Doughnut\n              data={comparedData}\n              options={{\n                title: { display: true, text: 'Breakdown of confirmed cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      var dataset = data.datasets[tooltipItem.datasetIndex];\n                      var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n                      var total = meta.total;\n                      var currentValue = dataset.data[tooltipItem.index];\n                      var percentage = parseFloat((currentValue / total * 100).toFixed(1));\n                      return currentValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ' (' + percentage + '%)';\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport AusCard from '../Cards/AusCard';\nimport { AusMixChart, AusCharts } from '../Charts/AusChart';\n\nconst AusScreen = () => {\n  return (\n    <div>\n      <AusCard />\n      <AusCharts />\n      <AusMixChart />\n    </div>\n  )\n};\n\nexport default AusScreen;\n","import axios from \"axios\";\n\nconst url1 = 'https://covid-193.p.rapidapi.com/history';\n\nconst convertNullToZero = (num) => {\n  return num === null ? 0 : num;\n}\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(url1, {\n      params: { country: 'japan' },\n      headers: {\n        'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n      }\n    });\n\n    const data = response.data.response;\n    const modifiedData = data.reduce((acc, item, itemIndex, arr) => {\n      const today = new Date(item.day)\n      const theDayBeforeYesterday = new Date(today-1000 * 60 * 60 * 24 * 2)\n      const date = theDayBeforeYesterday.toISOString().split('T')[0]\n  \n      const obj = {\n        confirmed: item.cases.total,\n        newConfirmed: convertNullToZero(item.cases.new),\n        recovered: item.cases.recovered,\n        active: item.cases.active,\n        critical: convertNullToZero(item.cases.critical),\n        deaths: item.deaths.total,\n        newDeaths: convertNullToZero(item.deaths.new),\n        tested: convertNullToZero(item.tests.total),\n        date: date,\n        date_2: theDayBeforeYesterday.getMonth() + 1 + '.' + theDayBeforeYesterday.getDate()\n      }\n\n      if (itemIndex === 0) {\n        acc.push(obj);\n      }\n      else if ((arr[itemIndex -1].day !== item.day)) {\n        acc.push(obj);\n      }\n      return acc;\n    }, []);\n\n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst url2 = 'https://covid-19-statistics.p.rapidapi.com/reports'\n\nexport const fetchProvinceData = async () => {\n  try {\n    const response = await axios.get(url2, {\n      params: { iso: 'JPN' },\n      headers: {\n        'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n        'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n      }\n    });\n\n    const data = response.data.data;\n    const modifiedData = data.map((item) => ({\n      prefecture: item.region.province,\n      confirmed: item.confirmed,\n      newConfirmed: item.confirmed_diff,\n      active: item.active,\n      newActive: item.active_diff,\n      deaths: item.deaths,\n      newDeaths: item.deaths_diff\n    }));\n\n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n   \n\n// export const fetchProvinceTotalData = async () => {\n//   try {\n//     const response = await axios.get(url2, {\n//       params: { iso: 'JPN' },\n//       headers: {\n//         'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n//         'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n//       }\n//     });\n\n//     const data = response.data.data;\n//     const modifiedData = data.map((item) => ({\n//       prefecture: item.region.province,\n//       confirmed: item.confirmed,\n//       active: item.active,\n//       deaths: item.deaths\n//     }));\n\n//     modifiedData.forEach((item, i) => {\n//       item.id = i + 1;\n//     });\n\n//     return modifiedData;\n\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// export const fetchProvinceNewData = async () => {\n//   try {\n//     const response = await axios.get(url2, {\n//       params: { iso: 'JPN' },\n//       headers: {\n//         'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n//         'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n//       }\n//     });\n\n//     const data = response.data.data;\n//     const modifiedData = data.map((item) => ({\n//       prefecture: item.region.province,\n//       newConfirmed: item.confirmed_diff,\n//       newActive: item.active_diff,\n//       newDeaths: item.deaths_diff,  \n//     }));\n\n//     modifiedData.forEach((item, i) => {\n//       item.id = i + 1;\n//     });\n\n//     return modifiedData;\n\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n\n","import React, { useState, useEffect } from 'react';\nimport { fetchData } from '../../api/japan';\nimport { Grid } from '@material-ui/core';\nimport CardDetails from './Card/CardDetails';\nimport styles from './Cards.module.css';\nimport covid from '../../images/covid19.png';\n\nconst JpCard = () => {\n  const [apiData, setApiData] = useState({});\n  const {confirmed, newConfirmed, recovered, deaths, newDeaths, active, tested} = apiData;\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n      \n      setApiData({\n        confirmed :res[0].confirmed.toLocaleString(),\n        newConfirmed :res[0].newConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        recovered :res[0].recovered.toLocaleString(),\n        deaths :res[0].deaths.toLocaleString(),\n        newDeaths :res[0].newDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        active :res[0].active.toLocaleString(),\n        tested :res[0].tested.toLocaleString()\n      });\n      \n    };\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div className={styles.cardContainer}>\n      <img className='covid-img' src={covid} alt='covid' />\n      <Grid container spacing={1} justify=\"center\">\n        <CardDetails\n          className={styles.confirmed}\n          cardTitle=\"Confirmed\"\n          totalValue={confirmed}\n          value={newConfirmed}\n        />\n        <CardDetails\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          totalValue={recovered}\n        />\n        <CardDetails\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          totalValue={deaths}\n          value={newDeaths}\n        />\n        <CardDetails\n          className={styles.active}\n          cardTitle=\"Active\"\n          totalValue={active}\n        />\n        <CardDetails\n          className={styles.tested}\n          cardTitle=\"Tested\"\n          totalValue={tested}\n        />\n      </Grid>\n    </div>\n  )\n\n};\n\nexport default JpCard;\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { fetchData } from '../../api/japan';\n\nexport const JpMixChart = () => {\n  const [apiData, setApiData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        labels: res.map(data => data.date),\n        datasets: [\n          {\n            label: 'New Confirmed',\n            borderColor: 'salmon',\n            backgroundColor: 'salmon',\n            fill: true,\n            data: res.map(data => data.newConfirmed),\n            type: 'bar',\n            yAxisID: 'y-axis-1'\n          },\n          {\n            label: 'Confirmed',\n            borderColor: '#ff6384',\n            backgroundColor: '#ff6384',\n            fill: false,\n            data: res.map(data => data.confirmed),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Recovered',\n            borderColor: '#36a2eb',\n            backgroundColor: '#36a2eb',\n            fill: false,\n            data: res.map(data => data.recovered),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Deaths',\n            borderColor: '#c9cbcf',\n            backgroundColor: '#c9cbcf',\n            fill: false,\n            data: res.map(data => data.deaths),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n\n        ]\n      });\n    };\n\n    fetchApi();\n  }, []);\n\n  const options = {\n    title: { display: true, text: 'Change in confirmed cases from Covid 19', fontSize: 16 },\n    legend: { display: true, position: 'bottom' },\n    responsive: true,\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n      }\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        }\n      ],\n\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-2',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Accumulation'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Paper style={{ padding: '10px' }}>\n        <Bar\n          data={apiData}\n          options={options}\n        />\n      </Paper>\n    </div>\n  )\n};\n\n\nexport const JpCharts = () => {\n  const [newConfirmedData, setNewConfirmedData] = useState({});\n  const [activeData, setActiveData] = useState({});\n  const [newDeathsData, setNewDeathsData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      const labels = [\n        res[9].date_2,\n        res[8].date_2,\n        res[7].date_2,\n        res[6].date_2,\n        res[5].date_2,\n        res[4].date_2,\n        res[3].date_2,\n        res[2].date_2,\n        res[1].date_2,\n        res[0].date_2\n      ]\n\n      setNewConfirmedData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Confirmed',\n            backgroundColor: '#ff6384',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newConfirmed,\n              res[8].newConfirmed,\n              res[7].newConfirmed,\n              res[6].newConfirmed,\n              res[5].newConfirmed,\n              res[4].newConfirmed,\n              res[3].newConfirmed,\n              res[2].newConfirmed,\n              res[1].newConfirmed,\n              res[0].newConfirmed\n            ]\n          }\n        ]\n      });\n\n      setActiveData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Non-Critical',\n            stack: 'active',\n            backgroundColor: '#ffcd56',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].active - res[9].critical,\n              res[8].active - res[8].critical,\n              res[7].active - res[7].critical,\n              res[6].active - res[6].critical,\n              res[5].active - res[5].critical,\n              res[4].active - res[4].critical,\n              res[3].active - res[3].critical,\n              res[2].active - res[2].critical,\n              res[1].active - res[1].critical,\n              res[0].active - res[0].critical\n            ]\n          },\n          {\n            label: 'Critical',\n            stack: 'active',\n            backgroundColor: 'salmon',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].critical,\n              res[8].critical,\n              res[7].critical,\n              res[6].critical,\n              res[5].critical,\n              res[4].critical,\n              res[3].critical,\n              res[2].critical,\n              res[1].critical,\n              res[0].critical\n            ]\n          }\n        ]\n      });\n\n      setNewDeathsData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Deaths',\n            backgroundColor: '#c9cbcf',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newDeaths,\n              res[8].newDeaths,\n              res[7].newDeaths,\n              res[6].newDeaths,\n              res[5].newDeaths,\n              res[4].newDeaths,\n              res[3].newDeaths,\n              res[2].newDeaths,\n              res[1].newDeaths,\n              res[0].newDeaths\n            ]\n          }\n        ]\n      });\n\n      setComparedData({\n        labels: ['Recovered', 'Active', 'Deaths'],\n        datasets: [\n          {\n            backgroundColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            borderColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            fill: false,\n            data: [\n              res[0].recovered,\n              res[0].active,\n              res[0].deaths\n            ]\n          }\n        ]\n      });\n    }\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Grid container spacing={3}>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newConfirmedData}\n              options={{\n                title: { display: true, text: 'Daily new cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={activeData}\n              options={{\n                title: { display: true, text: 'Total Active Cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    stacked: true,\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }],\n                  xAxes: [{\n                    stacked: true,\n                  }]\n                },\n                tooltips: {\n                  mode: 'label',\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    },\n                    footer: (tooltipItems, data) => {\n                      let total = tooltipItems.reduce((a, e) => a + parseInt(e.yLabel), 0);\n                      return 'Total Active: ' + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newDeathsData}\n              options={{\n                title: { display: true, text: 'Daily new deaths', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Doughnut\n              data={comparedData}\n              options={{\n                title: { display: true, text: 'Breakdown of confirmed cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      var dataset = data.datasets[tooltipItem.datasetIndex];\n                      var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n                      var total = meta.total;\n                      var currentValue = dataset.data[tooltipItem.index];\n                      var percentage = parseFloat((currentValue / total * 100).toFixed(1));\n                      return currentValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ' (' + percentage + '%)';\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport { makeStyles, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n}));\n\nexport default function Loading() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { makeStyles } from '@material-ui/core';\nimport { fetchProvinceData } from '../../api/japan';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize : \"0.9rem\",\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: \"#fcf8ec\",\n    }\n  }\n});\n\nconst JpTotalTable = () => {\n  const classes = useStyles();\n\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchProvinceData();\n      const p = res.map(a=>a.prefecture);\n      const c = res.map(a=>a.confirmed);\n      const d = res.map(a=>a.deaths);\n      const a = res.map(a=>a.active);\n\n      setApiData([\n        {id:0, prefecture:p[0], confirmed:c[0],deaths:d[0],active:a[0]},\n        {id:1, prefecture:p[1], confirmed:c[1],deaths:d[1],active:a[1]},\n        {id:2, prefecture:p[2], confirmed:c[2],deaths:d[2],active:a[2]},\n        {id:3, prefecture:p[3], confirmed:c[3],deaths:d[3],active:a[3]},\n        {id:4, prefecture:p[4], confirmed:c[4],deaths:d[4],active:a[4]},\n        {id:5, prefecture:p[5], confirmed:c[5],deaths:d[5],active:a[5]},\n        {id:6, prefecture:p[6], confirmed:c[6],deaths:d[6],active:a[6]},\n        {id:7, prefecture:p[7], confirmed:c[7],deaths:d[7],active:a[7]},\n        {id:8, prefecture:p[8], confirmed:c[8],deaths:d[8],active:a[8]},\n        {id:9, prefecture:p[9], confirmed:c[9],deaths:d[9],active:a[9]},\n        {id:10, prefecture:p[10], confirmed:c[10],deaths:d[10],active:a[10]},\n        {id:11, prefecture:p[11], confirmed:c[11],deaths:d[11],active:a[11]},\n        {id:12, prefecture:p[12], confirmed:c[12],deaths:d[12],active:a[12]},\n        {id:13, prefecture:p[13], confirmed:c[13],deaths:d[13],active:a[13]},\n        {id:14, prefecture:p[14], confirmed:c[14],deaths:d[14],active:a[14]},\n        {id:15, prefecture:p[15], confirmed:c[15],deaths:d[15],active:a[15]},\n        {id:16, prefecture:p[16], confirmed:c[16],deaths:d[16],active:a[16]},\n        {id:17, prefecture:p[17], confirmed:c[17],deaths:d[17],active:a[17]},\n        {id:18, prefecture:p[18], confirmed:c[18],deaths:d[18],active:a[18]},\n        {id:19, prefecture:p[19], confirmed:c[19],deaths:d[19],active:a[19]},\n        {id:20, prefecture:p[20], confirmed:c[20],deaths:d[20],active:a[20]},\n        {id:21, prefecture:p[21], confirmed:c[21],deaths:d[21],active:a[21]},\n        {id:22, prefecture:p[22], confirmed:c[22],deaths:d[22],active:a[22]},\n        {id:23, prefecture:p[23], confirmed:c[23],deaths:d[23],active:a[23]},\n        {id:24, prefecture:p[24], confirmed:c[24],deaths:d[24],active:a[24]},\n        {id:25, prefecture:p[25], confirmed:c[25],deaths:d[25],active:a[25]},\n        {id:26, prefecture:p[26], confirmed:c[26],deaths:d[26],active:a[26]},\n        {id:27, prefecture:p[27], confirmed:c[27],deaths:d[27],active:a[27]},\n        {id:28, prefecture:p[28], confirmed:c[28],deaths:d[28],active:a[28]},\n        {id:29, prefecture:p[29], confirmed:c[29],deaths:d[29],active:a[29]},\n        {id:30, prefecture:p[30], confirmed:c[30],deaths:d[30],active:a[30]},\n        {id:31, prefecture:p[31], confirmed:c[31],deaths:d[31],active:a[31]},\n        {id:32, prefecture:p[32], confirmed:c[32],deaths:d[32],active:a[32]},\n        {id:33, prefecture:p[33], confirmed:c[33],deaths:d[33],active:a[33]},\n        {id:34, prefecture:p[34], confirmed:c[34],deaths:d[34],active:a[34]},\n        {id:35, prefecture:p[35], confirmed:c[35],deaths:d[35],active:a[35]},\n        {id:36, prefecture:p[36], confirmed:c[36],deaths:d[36],active:a[36]},\n        {id:37, prefecture:p[37], confirmed:c[37],deaths:d[37],active:a[37]},\n        {id:38, prefecture:p[38], confirmed:c[38],deaths:d[38],active:a[38]},\n        {id:39, prefecture:p[39], confirmed:c[39],deaths:d[39],active:a[39]},\n        {id:40, prefecture:p[40], confirmed:c[40],deaths:d[40],active:a[40]},\n        {id:41, prefecture:p[41], confirmed:c[41],deaths:d[41],active:a[41]},\n        {id:42, prefecture:p[42], confirmed:c[42],deaths:d[42],active:a[42]},\n        {id:43, prefecture:p[43], confirmed:c[43],deaths:d[43],active:a[43]},\n        {id:44, prefecture:p[44], confirmed:c[44],deaths:d[44],active:a[44]},\n        {id:45, prefecture:p[45], confirmed:c[45],deaths:d[45],active:a[45]},\n        {id:46, prefecture:p[46], confirmed:c[46],deaths:d[46],active:a[46]},\n        {id:47, prefecture:p[47], confirmed:c[47],deaths:d[47],active:a[47]},\n        {id:48, prefecture:p[48], confirmed:c[48],deaths:d[48],active:a[48]},\n      ]);\n    };\n    \n    fetchApi();\n  }, []);\n\n  const columns = [\n    { field: \"prefecture\", headerName: \"Prefecture\", width: 180 },\n    { field: \"confirmed\", headerName: \"Confirmed\", type: \"number\", width: 180 },\n    { field: \"deaths\", headerName: \"Deaths\", type: \"number\", width: 180 },\n    { field: \"active\", headerName: \"Active\", type: \"number\", width: 180 },\n  ];\n\n  const styles = {\n    container : {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent:'center',\n      alignItems:'center'\n    },\n    table:{\n      height:500,\n      width:'85%'\n    },\n    title: {\n      paddingBottom: 15,\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      fontSize: 16,\n      fontWeight: 600\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <h4 style={styles.title}>Total cases by prefecture</h4>\n      <div style={styles.table}>\n      {apiData.length > 0 ? (\n        <DataGrid\n          rows={apiData}\n          columns={columns}\n          pageSize={7}\n          sortModel={[{ field: 'active', sort: 'desc' }]}\n          className={classes.root}\n        />\n         ) : <Loading />}\n      </div>\n    </div>\n  );\n}\n\nexport default JpTotalTable;\n","import React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { makeStyles } from '@material-ui/core';\nimport { fetchProvinceData } from '../../api/japan';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"0.9rem\",\n    \"& .MuiDataGrid-columnsContainer\": {\n      backgroundColor: \"#fcf8ec\",\n    }\n  }\n\n});\n\nconst JpDailyTable = () => {\n  const classes = useStyles();\n\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchProvinceData();\n      const p = res.map(a => a.prefecture);\n      const nc = res.map(a => a.newConfirmed);\n      const nd = res.map(a => a.newDeaths);\n      const na = res.map(a => a.newActive);\n\n      setApiData([\n        { id: 0, prefecture: p[0], newConfirmed: nc[0], newDeaths: nd[0], newActive: na[0] },\n        { id: 1, prefecture: p[1], newConfirmed: nc[1], newDeaths: nd[1], newActive: na[1] },\n        { id: 2, prefecture: p[2], newConfirmed: nc[2], newDeaths: nd[2], newActive: na[2] },\n        { id: 3, prefecture: p[3], newConfirmed: nc[3], newDeaths: nd[3], newActive: na[3] },\n        { id: 4, prefecture: p[4], newConfirmed: nc[4], newDeaths: nd[4], newActive: na[4] },\n        { id: 5, prefecture: p[5], newConfirmed: nc[5], newDeaths: nd[5], newActive: na[5] },\n        { id: 6, prefecture: p[6], newConfirmed: nc[6], newDeaths: nd[6], newActive: na[6] },\n        { id: 7, prefecture: p[7], newConfirmed: nc[7], newDeaths: nd[7], newActive: na[7] },\n        { id: 8, prefecture: p[8], newConfirmed: nc[8], newDeaths: nd[8], newActive: na[8] },\n        { id: 9, prefecture: p[9], newConfirmed: nc[9], newDeaths: nd[9], newActive: na[9] },\n        { id: 10, prefecture: p[10], newConfirmed: nc[10], newDeaths: nd[10], newActive: na[10] },\n        { id: 11, prefecture: p[11], newConfirmed: nc[11], newDeaths: nd[11], newActive: na[11] },\n        { id: 12, prefecture: p[12], newConfirmed: nc[12], newDeaths: nd[12], newActive: na[12] },\n        { id: 13, prefecture: p[13], newConfirmed: nc[13], newDeaths: nd[13], newActive: na[13] },\n        { id: 14, prefecture: p[14], newConfirmed: nc[14], newDeaths: nd[14], newActive: na[14] },\n        { id: 15, prefecture: p[15], newConfirmed: nc[15], newDeaths: nd[15], newActive: na[15] },\n        { id: 16, prefecture: p[16], newConfirmed: nc[16], newDeaths: nd[16], newActive: na[16] },\n        { id: 17, prefecture: p[17], newConfirmed: nc[17], newDeaths: nd[17], newActive: na[17] },\n        { id: 18, prefecture: p[18], newConfirmed: nc[18], newDeaths: nd[18], newActive: na[18] },\n        { id: 19, prefecture: p[19], newConfirmed: nc[19], newDeaths: nd[19], newActive: na[19] },\n        { id: 20, prefecture: p[20], newConfirmed: nc[20], newDeaths: nd[20], newActive: na[20] },\n        { id: 21, prefecture: p[21], newConfirmed: nc[21], newDeaths: nd[21], newActive: na[21] },\n        { id: 22, prefecture: p[22], newConfirmed: nc[22], newDeaths: nd[22], newActive: na[22] },\n        { id: 23, prefecture: p[23], newConfirmed: nc[23], newDeaths: nd[23], newActive: na[23] },\n        { id: 24, prefecture: p[24], newConfirmed: nc[24], newDeaths: nd[24], newActive: na[24] },\n        { id: 25, prefecture: p[25], newConfirmed: nc[25], newDeaths: nd[25], newActive: na[25] },\n        { id: 26, prefecture: p[26], newConfirmed: nc[26], newDeaths: nd[26], newActive: na[26] },\n        { id: 27, prefecture: p[27], newConfirmed: nc[27], newDeaths: nd[27], newActive: na[27] },\n        { id: 28, prefecture: p[28], newConfirmed: nc[28], newDeaths: nd[28], newActive: na[28] },\n        { id: 29, prefecture: p[29], newConfirmed: nc[29], newDeaths: nd[29], newActive: na[29] },\n        { id: 30, prefecture: p[30], newConfirmed: nc[30], newDeaths: nd[30], newActive: na[30] },\n        { id: 31, prefecture: p[31], newConfirmed: nc[31], newDeaths: nd[31], newActive: na[31] },\n        { id: 32, prefecture: p[32], newConfirmed: nc[32], newDeaths: nd[32], newActive: na[32] },\n        { id: 33, prefecture: p[33], newConfirmed: nc[33], newDeaths: nd[33], newActive: na[33] },\n        { id: 34, prefecture: p[34], newConfirmed: nc[34], newDeaths: nd[34], newActive: na[34] },\n        { id: 35, prefecture: p[35], newConfirmed: nc[35], newDeaths: nd[35], newActive: na[35] },\n        { id: 36, prefecture: p[36], newConfirmed: nc[36], newDeaths: nd[36], newActive: na[36] },\n        { id: 37, prefecture: p[37], newConfirmed: nc[37], newDeaths: nd[37], newActive: na[37] },\n        { id: 38, prefecture: p[38], newConfirmed: nc[38], newDeaths: nd[38], newActive: na[38] },\n        { id: 39, prefecture: p[39], newConfirmed: nc[39], newDeaths: nd[39], newActive: na[39] },\n        { id: 40, prefecture: p[40], newConfirmed: nc[40], newDeaths: nd[40], newActive: na[40] },\n        { id: 41, prefecture: p[41], newConfirmed: nc[41], newDeaths: nd[41], newActive: na[41] },\n        { id: 42, prefecture: p[42], newConfirmed: nc[42], newDeaths: nd[42], newActive: na[42] },\n        { id: 43, prefecture: p[43], newConfirmed: nc[43], newDeaths: nd[43], newActive: na[43] },\n        { id: 44, prefecture: p[44], newConfirmed: nc[44], newDeaths: nd[44], newActive: na[44] },\n        { id: 45, prefecture: p[45], newConfirmed: nc[45], newDeaths: nd[45], newActive: na[45] },\n        { id: 46, prefecture: p[46], newConfirmed: nc[46], newDeaths: nd[46], newActive: na[46] },\n        { id: 47, prefecture: p[47], newConfirmed: nc[47], newDeaths: nd[47], newActive: na[47] },\n        { id: 48, prefecture: p[48], newConfirmed: nc[48], newDeaths: nd[48], newActive: na[48] },\n      ]);\n    };\n\n    fetchApi();\n  }, []);\n\n  const columns = [\n    { field: \"prefecture\", headerName: \"Prefecture\", width: 180 },\n    { field: \"newConfirmed\", headerName: \"Confirmed\", type: \"number\", width: 180 },\n    { field: \"newDeaths\", headerName: \"Deaths\", type: \"number\", width: 180 },\n    { field: \"newActive\", headerName: \"Active\", type: \"number\", width: 180 },\n  ];\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    table: {\n      height: 500,\n      width: '85%'\n    },\n    title: {\n      paddingBottom: 15,\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n      fontSize: 16,\n      fontWeight: 600\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <h4 style={styles.title}>Daily new cases by prefecture</h4>\n      <div style={styles.table}>\n        {apiData.length > 0 ? (\n          <DataGrid\n            rows={apiData}\n            columns={columns}\n            pageSize={7}\n            sortModel={[{ field: 'newConfirmed', sort: 'desc' }]}\n            className={classes.root}\n          />\n        ) : <Loading />}\n      </div>\n    </div>\n  );\n}\n\nexport default JpDailyTable;\n","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles, Paper, AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core';\nimport JpTotalTable from '../Tables/JpTotalTable';\nimport JpDailyTable from '../Tables/JpDailyTable';\n\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={5}>\n          <Typography component={'span'} variant={'body2'}>\n            {children}\n          </Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles({\n  header: {\n    padding: 5,\n    display: 'flex',\n    justifyContent : 'center',\n    alignItems: 'center'\n  }\n\n});\n\nfunction JpTable() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper>\n      <AppBar position=\"sticky\" color=\"inherit\" elevation={0} className={classes.header}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab label=\"Total\" />\n          <Tab label=\"Daily\" />\n\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0} {...a11yProps(0)} >\n        <JpTotalTable />\n      </TabPanel>\n      <TabPanel value={value} index={1} {...a11yProps(1)} >\n        <JpDailyTable />\n      </TabPanel>\n\n    </Paper>\n  );\n}\n\nexport default JpTable;\n\n","import React from 'react';\nimport JpCard from '../Cards/JpCard';\nimport { JpMixChart, JpCharts } from '../Charts/JpChart';\nimport JpTable from '../Tables/Tab';\n\nconst JpScreen = () => {\n  return (\n    <div>\n      <JpCard />\n      <JpCharts/>\n      <JpMixChart />\n      <JpTable />\n    </div>\n  )\n};\n\nexport default JpScreen;\n\n\n\n\n\n\n","import axios from \"axios\";\n\nconst url = 'https://covid-193.p.rapidapi.com/history';\n\nconst convertNullToZero = (num) => {\n  return num === null ? 0 : num;\n}\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(url, {\n      params: { country: 's-korea' },\n      headers: {\n        'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n      }\n    });\n\n    const data = response.data.response;\n    const modifiedData = data.reduce((acc, item, itemIndex, arr) => {\n      const today = new Date(item.day)\n      const yesterday = new Date(today - 1000 * 60 * 60 * 24)\n      const theDayBeforeYesterday = new Date(today - 1000 * 60 * 60 * 24 * 2)\n      const date1 = yesterday.toISOString().split('T')[0]\n      const date2 = theDayBeforeYesterday.toISOString().split('T')[0]\n\n      const obj1 = {\n        confirmed: item.cases.total,\n        newConfirmed: convertNullToZero(item.cases.new),\n        recovered: item.cases.recovered,\n        active: item.cases.active,\n        critical: convertNullToZero(item.cases.critical),\n        deaths: item.deaths.total,\n        newDeaths: convertNullToZero(item.deaths.new),\n        tested: convertNullToZero(item.tests.total),\n        date: date1,\n        date_2: yesterday.getMonth() + 1 + '.' + yesterday.getDate()\n      }\n\n      const obj2 = {\n        confirmed: item.cases.total,\n        newConfirmed: convertNullToZero(item.cases.new),\n        recovered: item.cases.recovered,\n        active: item.cases.active,\n        critical: convertNullToZero(item.cases.critical),\n        deaths: item.deaths.total,\n        newDeaths: convertNullToZero(item.deaths.new),\n        tested: convertNullToZero(item.tests.total),\n        date: date2,\n        date_2: theDayBeforeYesterday.getMonth() + 1 + '.' + theDayBeforeYesterday.getDate()\n      }\n\n      if (itemIndex === 0) {\n        acc.push(obj1);\n      }\n      else if (itemIndex === 1) {\n        acc.push(obj2);\n      }\n      else if ((arr[itemIndex - 1].day !== item.day && itemIndex > 1)) {\n        acc.push(obj2);\n      }\n      return acc;\n    }, []);\n    \n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchData } from '../../api/korea';\nimport { Grid } from '@material-ui/core';\nimport CardDetails from './Card/CardDetails';\nimport styles from './Cards.module.css';\nimport covid from '../../images/covid19.png';\n\nconst KrCard = () => {\n\n  const [apiData, setApiData] = useState({});\n  const {confirmed, newConfirmed, recovered, deaths, newDeaths, active, tested} = apiData;\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n      \n      setApiData({\n        confirmed :res[0].confirmed.toLocaleString(),\n        newConfirmed :res[0].newConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        recovered :res[0].recovered.toLocaleString(),\n        deaths :res[0].deaths.toLocaleString(),\n        newDeaths :res[0].newDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        active :res[0].active.toLocaleString(),\n        tested :res[0].tested.toLocaleString()\n      });\n      \n    };\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div className={styles.cardContainer}>\n     <img className='covid-img' src={covid} alt='covid' />\n      <Grid container spacing={1} justify=\"center\">\n        <CardDetails\n          className={styles.confirmed}\n          cardTitle=\"Confirmed\"\n          totalValue={confirmed}\n          value={newConfirmed}\n        />\n        <CardDetails\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          totalValue={recovered}\n        />\n        <CardDetails\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          totalValue={deaths}\n          value={newDeaths}\n        />\n        <CardDetails\n          className={styles.active}\n          cardTitle=\"Active\"\n          totalValue={active}\n        />\n        <CardDetails\n          className={styles.tested}\n          cardTitle=\"Tested\"\n          totalValue={tested}\n        />\n      </Grid>\n    </div>\n  )\n};\n\nexport default KrCard;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { fetchData } from '../../api/korea';\n\nexport const KrMixChart = () => {\n  const [apiData, setApiData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        labels: res.map(data => data.date),\n        datasets: [\n          {\n            label: 'New Confirmed',\n            borderColor: 'salmon',\n            backgroundColor: 'salmon',\n            fill: true,\n            data: res.map(data => data.newConfirmed),\n            type: 'bar',\n            yAxisID: 'y-axis-1'\n          },\n          {\n            label: 'Confirmed',\n            borderColor: '#ff6384',\n            backgroundColor: '#ff6384',\n            fill: false,\n            data: res.map(data => data.confirmed),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Recovered',\n            borderColor: '#36a2eb',\n            backgroundColor: '#36a2eb',\n            fill: false,\n            data: res.map(data => data.recovered),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Deaths',\n            borderColor: '#c9cbcf',\n            backgroundColor: '#c9cbcf',\n            fill: false,\n            data: res.map(data => data.deaths),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n\n        ]\n      });\n    };\n\n    fetchApi();\n  }, []);\n\n  const options = {\n    title: { display: true, text: 'Change in confirmed cases from Covid 19', fontSize: 16 },\n    legend: { display: true, position: 'bottom' },\n    responsive: true,\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n      }\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        }\n      ],\n\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-2',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Accumulation'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Paper style={{ padding: '10px' }}>\n        <Bar\n          data={apiData}\n          options={options}\n        />\n      </Paper>\n    </div>\n  )\n};\n\n\nexport const KrCharts = () => {\n  const [newConfirmedData, setNewConfirmedData] = useState({});\n  const [activeData, setActiveData] = useState({});\n  const [newDeathsData, setNewDeathsData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      const labels = [\n        res[9].date_2,\n        res[8].date_2,\n        res[7].date_2,\n        res[6].date_2,\n        res[5].date_2,\n        res[4].date_2,\n        res[3].date_2,\n        res[2].date_2,\n        res[1].date_2,\n        res[0].date_2\n      ]\n\n      setNewConfirmedData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Confirmed',\n            backgroundColor: '#ff6384',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newConfirmed,\n              res[8].newConfirmed,\n              res[7].newConfirmed,\n              res[6].newConfirmed,\n              res[5].newConfirmed,\n              res[4].newConfirmed,\n              res[3].newConfirmed,\n              res[2].newConfirmed,\n              res[1].newConfirmed,\n              res[0].newConfirmed\n            ]\n          }\n        ]\n      });\n\n      setActiveData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Non-Critical',\n            stack: 'active',\n            backgroundColor: '#ffcd56',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].active - res[9].critical,\n              res[8].active - res[8].critical,\n              res[7].active - res[7].critical,\n              res[6].active - res[6].critical,\n              res[5].active - res[5].critical,\n              res[4].active - res[4].critical,\n              res[3].active - res[3].critical,\n              res[2].active - res[2].critical,\n              res[1].active - res[1].critical,\n              res[0].active - res[0].critical\n            ]\n          },\n          {\n            label: 'Critical',\n            stack: 'active',\n            backgroundColor: 'salmon',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].critical,\n              res[8].critical,\n              res[7].critical,\n              res[6].critical,\n              res[5].critical,\n              res[4].critical,\n              res[3].critical,\n              res[2].critical,\n              res[1].critical,\n              res[0].critical\n            ]\n          }\n        ]\n      });\n\n      setNewDeathsData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Deaths',\n            backgroundColor: '#c9cbcf',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newDeaths,\n              res[8].newDeaths,\n              res[7].newDeaths,\n              res[6].newDeaths,\n              res[5].newDeaths,\n              res[4].newDeaths,\n              res[3].newDeaths,\n              res[2].newDeaths,\n              res[1].newDeaths,\n              res[0].newDeaths\n            ]\n          }\n        ]\n      });\n\n      setComparedData({\n        labels: ['Recovered', 'Active', 'Deaths'],\n        datasets: [\n          {\n            backgroundColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            borderColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            fill: false,\n            data: [\n              res[0].recovered,\n              res[0].active,\n              res[0].deaths\n            ]\n          }\n        ]\n      });\n    }\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Grid container spacing={3}>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newConfirmedData}\n              options={{\n                title: { display: true, text: 'Daily new cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={activeData}\n              options={{\n                title: { display: true, text: 'Total Active Cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    stacked: true,\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }],\n                  xAxes: [{\n                    stacked: true,\n                  }]\n                },\n                tooltips: {\n                  mode: 'label',\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    },\n                    footer: (tooltipItems, data) => {\n                      let total = tooltipItems.reduce((a, e) => a + parseInt(e.yLabel), 0);\n                      return 'Total Active: ' + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newDeathsData}\n              options={{\n                title: { display: true, text: 'Daily new deaths', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Doughnut\n              data={comparedData}\n              options={{\n                title: { display: true, text: 'Breakdown of confirmed cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      var dataset = data.datasets[tooltipItem.datasetIndex];\n                      var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n                      var total = meta.total;\n                      var currentValue = dataset.data[tooltipItem.index];\n                      var percentage = parseFloat((currentValue / total * 100).toFixed(1));\n                      return currentValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ' (' + percentage + '%)';\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport KrCard from '../Cards/KrCard';\nimport { KrMixChart, KrCharts } from '../Charts/KrChart';\n\nconst KrScreen = () => {\n  return (\n    <div>\n      <KrCard />\n      <KrCharts/>\n      <KrMixChart />\n    </div>\n  )\n};\n\nexport default KrScreen;\n","import axios from \"axios\";\n\nconst url = 'https://covid-193.p.rapidapi.com/history';\n\nconst convertNullToZero = (num) => {\n  return num === null ? 0 : num;\n}\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(url, {\n      params: { country: 'malaysia' },\n      headers: {\n        'x-rapidapi-key': '6f2df78c88msha87c04480806b5ap14b47ajsn0b3d00797cce',\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n      }\n    });\n\n    const data = response.data.response;\n    const modifiedData = data.reduce((acc, item, itemIndex, arr) => {\n      const today = new Date(item.day)\n      const yesterday = new Date(today-1000 * 60 * 60 * 24)\n      const date = yesterday.toISOString().split('T')[0]\n  \n      const obj = {\n        confirmed: item.cases.total,\n        newConfirmed: convertNullToZero(item.cases.new),\n        recovered: item.cases.recovered,\n        active: item.cases.active,\n        critical: convertNullToZero(item.cases.critical),\n        deaths: item.deaths.total,\n        newDeaths: convertNullToZero(item.deaths.new),\n        tested: convertNullToZero(item.tests.total),\n        date: date,\n        date_2: yesterday.getMonth() + 1 + '.' + yesterday.getDate()\n      }\n\n      if (itemIndex === 0) {\n        acc.push(obj);\n      }\n      else if ((arr[itemIndex -1].day !== item.day)) {\n        acc.push(obj);\n      }\n      return acc;\n    }, []);\n    \n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchData } from '../../api/malaysia';\nimport { Grid } from '@material-ui/core';\nimport CardDetails from './Card/CardDetails';\nimport styles from './Cards.module.css';\nimport covid from '../../images/covid19.png';\n\nconst MysCard = () => {\n\n  const [apiData, setApiData] = useState({});\n  const {confirmed, newConfirmed, recovered, deaths, newDeaths, active, tested} = apiData;\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        confirmed :res[0].confirmed.toLocaleString(),\n        newConfirmed :res[0].newConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        recovered :res[0].recovered.toLocaleString(),\n        deaths :res[0].deaths.toLocaleString(),\n        newDeaths :res[0].newDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        active :res[0].active.toLocaleString(),\n        tested :res[0].tested.toLocaleString()\n      });\n      \n    };\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div className={styles.cardContainer}>\n     <img className='covid-img' src={covid} alt='covid' />\n      <Grid container spacing={1} justify=\"center\">\n        <CardDetails\n          className={styles.confirmed}\n          cardTitle=\"Confirmed\"\n          totalValue={confirmed}\n          value={newConfirmed}\n        />\n        <CardDetails\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          totalValue={recovered}\n        />\n        <CardDetails\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          totalValue={deaths}\n          value={newDeaths}\n        />\n        <CardDetails\n          className={styles.active}\n          cardTitle=\"Active\"\n          totalValue={active}\n        />\n        <CardDetails\n          className={styles.tested}\n          cardTitle=\"Tested\"\n          totalValue={tested}\n        />\n      </Grid>\n    </div>\n  )\n};\n\nexport default MysCard;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { fetchData } from '../../api/malaysia';\n\nexport const MysMixChart = () => {\n  const [apiData, setApiData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      setApiData({\n        labels: res.map(data => data.date),\n        datasets: [\n          {\n            label: 'New Confirmed',\n            borderColor: 'salmon',\n            backgroundColor: 'salmon',\n            fill: true,\n            data: res.map(data => data.newConfirmed),\n            type: 'bar',\n            yAxisID: 'y-axis-1'\n          },\n          {\n            label: 'Confirmed',\n            borderColor: '#ff6384',\n            backgroundColor: '#ff6384',\n            fill: false,\n            data: res.map(data => data.confirmed),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Recovered',\n            borderColor: '#36a2eb',\n            backgroundColor: '#36a2eb',\n            fill: false,\n            data: res.map(data => data.recovered),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n          {\n            label: 'Deaths',\n            borderColor: '#c9cbcf',\n            backgroundColor: '#c9cbcf',\n            fill: false,\n            data: res.map(data => data.deaths),\n            type: 'line',\n            yAxisID: 'y-axis-2',\n            pointRadius: 1,\n            hoverRadius: 5\n          },\n\n        ]\n      });\n    };\n\n    fetchApi();\n  }, []);\n\n  const options = {\n    title: { display: true, text: 'Change in confirmed cases from Covid 19', fontSize: 16 },\n    legend: { display: true, position: 'bottom' },\n    responsive: true,\n    tooltips: {\n      mode: 'label',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n      }\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        }\n      ],\n\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-2',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Accumulation'\n          },\n          ticks: {\n            beginAtZero: true,\n            callback: function (label) {\n              if (label < 1000) {\n                return label\n              } else if (label >= 1000) {\n                return label / 1000 + 'k'\n              } else if (label >= 1000000) {\n                return label / 1000000 + 'M'\n              }\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Paper style={{ padding: '10px' }}>\n        <Bar\n          data={apiData}\n          options={options}\n        />\n      </Paper>\n    </div>\n  )\n};\n\n\nexport const MysCharts = () => {\n  const [newConfirmedData, setNewConfirmedData] = useState({});\n  const [activeData, setActiveData] = useState({});\n  const [newDeathsData, setNewDeathsData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const res = await fetchData();\n\n      const labels = [\n        res[9].date_2,\n        res[8].date_2,\n        res[7].date_2,\n        res[6].date_2,\n        res[5].date_2,\n        res[4].date_2,\n        res[3].date_2,\n        res[2].date_2,\n        res[1].date_2,\n        res[0].date_2\n      ]\n\n      setNewConfirmedData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Confirmed',\n            backgroundColor: '#ff6384',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newConfirmed,\n              res[8].newConfirmed,\n              res[7].newConfirmed,\n              res[6].newConfirmed,\n              res[5].newConfirmed,\n              res[4].newConfirmed,\n              res[3].newConfirmed,\n              res[2].newConfirmed,\n              res[1].newConfirmed,\n              res[0].newConfirmed\n            ]\n          }\n        ]\n      });\n\n      setActiveData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Non-Critical',\n            stack: 'active',\n            backgroundColor: '#ffcd56',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].active - res[9].critical,\n              res[8].active - res[8].critical,\n              res[7].active - res[7].critical,\n              res[6].active - res[6].critical,\n              res[5].active - res[5].critical,\n              res[4].active - res[4].critical,\n              res[3].active - res[3].critical,\n              res[2].active - res[2].critical,\n              res[1].active - res[1].critical,\n              res[0].active - res[0].critical\n            ]\n          },\n          {\n            label: 'Critical',\n            stack: 'active',\n            backgroundColor: 'salmon',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].critical,\n              res[8].critical,\n              res[7].critical,\n              res[6].critical,\n              res[5].critical,\n              res[4].critical,\n              res[3].critical,\n              res[2].critical,\n              res[1].critical,\n              res[0].critical\n            ]\n          }\n        ]\n      });\n\n      setNewDeathsData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'New Deaths',\n            backgroundColor: '#c9cbcf',\n            barThickness: 10,\n            fill: true,\n            data: [\n              res[9].newDeaths,\n              res[8].newDeaths,\n              res[7].newDeaths,\n              res[6].newDeaths,\n              res[5].newDeaths,\n              res[4].newDeaths,\n              res[3].newDeaths,\n              res[2].newDeaths,\n              res[1].newDeaths,\n              res[0].newDeaths\n            ]\n          }\n        ]\n      });\n\n      setComparedData({\n        labels: ['Recovered', 'Active', 'Deaths'],\n        datasets: [\n          {\n            backgroundColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            borderColor: ['#36a2eb', '#ffcd56', '#c9cbcf'],\n            fill: false,\n            data: [\n              res[0].recovered,\n              res[0].active,\n              res[0].deaths\n            ]\n          }\n        ]\n      });\n    }\n\n    fetchApi();\n  }, []);\n\n  return (\n    <div style={{paddingBottom: '3%'}}>\n      <Grid container spacing={3}>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newConfirmedData}\n              options={{\n                title: { display: true, text: 'Daily new cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={activeData}\n              options={{\n                title: { display: true, text: 'Total Active Cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    stacked: true,\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }],\n                  xAxes: [{\n                    stacked: true,\n                  }]\n                },\n                tooltips: {\n                  mode: 'label',\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    },\n                    footer: (tooltipItems, data) => {\n                      let total = tooltipItems.reduce((a, e) => a + parseInt(e.yLabel), 0);\n                      return 'Total Active: ' + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Bar\n              data={newDeathsData}\n              options={{\n                title: { display: true, text: 'Daily new deaths', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true,\n                      callback: function (value) {\n                        if (parseInt(value) >= 1000) {\n                          return value.toLocaleString();\n                        } else {\n                          return value;\n                        }\n                      }\n                    }\n                  }]\n                },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      return data.datasets[tooltipItem.datasetIndex].label + ' : ' + tooltipItem.yLabel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} md={6} sm={12} xs={12}>\n          <Paper style={{ padding: '10px' }}>\n            <Doughnut\n              data={comparedData}\n              options={{\n                title: { display: true, text: 'Breakdown of confirmed cases', fontSize: 16 },\n                legend: { display: true, position: 'bottom' },\n                tooltips: {\n                  callbacks: {\n                    label: function (tooltipItem, data) {\n                      var dataset = data.datasets[tooltipItem.datasetIndex];\n                      var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n                      var total = meta.total;\n                      var currentValue = dataset.data[tooltipItem.index];\n                      var percentage = parseFloat((currentValue / total * 100).toFixed(1));\n                      return currentValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ' (' + percentage + '%)';\n                    }\n                  }\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport MysCard from '../Cards/MysCard';\nimport { MysMixChart, MysCharts } from '../Charts/MysChart';\n\n\nconst MysScreen = () => {\n  return (\n    <div>\n      <MysCard />\n      <MysCharts />\n      <MysMixChart />\n    </div>\n  )\n};\n\nexport default MysScreen;\n","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles, AppBar, Tabs, Tab, Typography, Box, FormHelperText } from '@material-ui/core';\nimport AusScreen from './AusScreen';\nimport JpScreen from './JpScreen';\nimport KrScreen from './KrScreen';\nimport MysScreen from './MysScreen';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={1}>\n          <Typography component={'span'} variant={'body2'}>\n            {children}\n          </Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles({\n  header: {\n    padding: 5,\n    display: 'flex',\n    justifyContent : 'center',\n    alignItems: 'center'\n  }\n\n});\n\nfunction CovidData() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div style={{marginTop:'3%'}}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0} className={classes.header}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab label=\"Japan\" />\n          <Tab label=\"Malaysia\" />\n          <Tab label=\"Korea\" />\n          <Tab label=\"Australia\" />\n\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0} {...a11yProps(0)} >\n        <JpScreen />\n      </TabPanel>\n      <TabPanel value={value} index={1} {...a11yProps(1)} >\n        <MysScreen/>\n      </TabPanel>\n      <TabPanel value={value} index={2} {...a11yProps(2)} >\n        <KrScreen/>\n      </TabPanel>\n      <TabPanel value={value} index={3} {...a11yProps(3)} >\n        <AusScreen/>\n      </TabPanel>\n\n    </div>\n  );\n}\n\nexport default CovidData;\n\n","import React from 'react';\nimport map from '../images/map.png';\nimport CovidData from './Screens/Tab';\n\nconst Home = () => {\n  return (\n    <div>\n    <img className='map-img' src={map} alt='map' />\n    <CovidData />\n    </div>\n  )\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright ⓒ {year} Bomyung Choi</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport Home from './Home';\nimport Footer from './Footer';\n\nconst App = () => {\n  return (\n    <div className='container-xl'>\n      <Header />\n      <Home />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}